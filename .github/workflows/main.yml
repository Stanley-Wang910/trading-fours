name: Build, Push, Deploy

on:
  push:
    branches: [master]
  workflow_dispatch:

env:
  ECR_REGISTRY: public.ecr.aws/l5q8r9o9
  ECR_REPOSITORY: trading-fours
  EB_APPLICATION_NAME: t4-app
  EB_ENVIRONMENT_NAME: T4-app-env

jobs:
  build-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS Creds
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Login to Amazon ECR
        run: |
          aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws/l5q8r9o9

      - name: Build Docker Images
        run: |
          docker compose build backend
          docker compose build client

      - name: Tag Docker Images
        run: |
          docker tag trading-fours-client:latest ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:frontend-latest
          docker tag trading-fours-backend:latest ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:backend-latest
      - name: Push images to ECR
        run: |
          docker push ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:frontend-latest
          docker push ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:backend-latest

  deploy:
    needs: build-push
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Generate deployment package
        run: |
          zip -r deploy.zip docker-compose.yml .platform flask_app/.env react_app/.env

      - name: Deploy to EB
        uses: einaregilsson/beanstalk-deploy@v21
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          application_name: ${{ env.EB_APPLICATION_NAME }}
          environment_name: ${{ env.EB_ENVIRONMENT_NAME }}
          version_label: ${{ github.sha }}
          region: us-east-2
          deployment_package: deploy.zip
          use_existing_version_if_available: false
          wait_for_environment_recovery: 300
